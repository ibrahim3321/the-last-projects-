name: Build Images

on:
  push:
    branches: [ main, feature/ci-cd ]
  workflow_dispatch: {}

env:
  REGISTRY_FQDN_SUFFIX: azurecr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      ENV: ${{ steps.envsel.outputs.ENV }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Choose environment from branch
        id: envsel
        run: |
          if [ "${GITHUB_REF##*/}" = "main" ]; then
            echo "ENV=prod" >> $GITHUB_OUTPUT
          else
            echo "ENV=dev" >> $GITHUB_OUTPUT
          fi

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}
          tenant-id: ${{ fromJSON(secrets.AZURE_CREDENTIALS).tenantId }}
          subscription-id: ${{ fromJSON(secrets.AZURE_CREDENTIALS).subscriptionId }}

      - name: Derive ACR FQDN and login
        id: acr
        shell: bash
        run: |
          ACR_NAME="${{ secrets.ACR_NAME }}"
          echo "ACR=${ACR_NAME}.${REGISTRY_FQDN_SUFFIX}" >> $GITHUB_OUTPUT
          az acr login --name "${ACR_NAME}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Backend
      - name: Build & push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ steps.acr.outputs.ACR }}/backend:latest-${{ steps.envsel.outputs.ENV }}
            ${{ steps.acr.outputs.ACR }}/backend:${{ github.sha }}-${{ steps.envsel.outputs.ENV }}

      # Frontend
      - name: Build & push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ steps.acr.outputs.ACR }}/frontend:latest-${{ steps.envsel.outputs.ENV }}
            ${{ steps.acr.outputs.ACR }}/frontend:${{ github.sha }}-${{ steps.envsel.outputs.ENV }}

      # Callmebot adapter
      - name: Build & push callmebot-adapter
        uses: docker/build-push-action@v5
        with:
          context: ./aks-yaml/callmebot
          push: true
          tags: |
            ${{ steps.acr.outputs.ACR }}/callmebot-adapter:latest-${{ steps.envsel.outputs.ENV }}
            ${{ steps.acr.outputs.ACR }}/callmebot-adapter:${{ github.sha }}-${{ steps.envsel.outputs.ENV }}
