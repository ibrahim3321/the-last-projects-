name: Build Images

on:
  push:
    branches: [ main, feature/ci-cd ]
  workflow_dispatch: {}

env:
  REGISTRY_FQDN_SUFFIX: azurecr.io

concurrency:
  group: build-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      ENV: ${{ steps.envsel.outputs.ENV }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Decide ENV from branch
        id: envsel
        shell: bash
        run: |
          BR="${GITHUB_REF_NAME:-${GITHUB_REF##*/}}"
          if [ "$BR" = "main" ]; then ENV=prod; else ENV=dev; fi
          echo "ENV=$ENV" >> "$GITHUB_OUTPUT"

      - name: 🔐 Azure Login (SPN JSON)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Resolve ACR FQDN and login
        id: acr
        shell: bash
        run: |
          ACR_NAME="${{ secrets.ACR_NAME }}"
          test -n "$ACR_NAME" || { echo "Missing secret ACR_NAME"; exit 1; }
          echo "ACR=${ACR_NAME}.${REGISTRY_FQDN_SUFFIX}" >> "$GITHUB_OUTPUT"
          az acr login --name "$ACR_NAME"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ steps.acr.outputs.ACR }}/backend:latest-${{ steps.envsel.outputs.ENV }}
            ${{ steps.acr.outputs.ACR }}/backend:${{ github.sha }}-${{ steps.envsel.outputs.ENV }}
          cache-from: type=registry,ref=${{ steps.acr.outputs.ACR }}/backend:buildcache
          cache-to: type=registry,ref=${{ steps.acr.outputs.ACR }}/backend:buildcache,mode=max

      - name: Build & push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ steps.acr.outputs.ACR }}/frontend:latest-${{ steps.envsel.outputs.ENV }}
            ${{ steps.acr.outputs.ACR }}/frontend:${{ github.sha }}-${{ steps.envsel.outputs.ENV }}
          cache-from: type=registry,ref=${{ steps.acr.outputs.ACR }}/frontend:buildcache
          cache-to: type=registry,ref=${{ steps.acr.outputs.ACR }}/frontend:buildcache,mode=max

      - name: Build & push callmebot-adapter
        uses: docker/build-push-action@v5
        with:
          context: ./aks-yaml/callmebot
          push: true
          tags: |
            ${{ steps.acr.outputs.ACR }}/callmebot-adapter:latest-${{ steps.envsel.outputs.ENV }}
            ${{ steps.acr.outputs.ACR }}/callmebot-adapter:${{ github.sha }}-${{ steps.envsel.outputs.ENV }}
          cache-from: type=registry,ref=${{ steps.acr.outputs.ACR }}/callmebot-adapter:buildcache
          cache-to: type=registry,ref=${{ steps.acr.outputs.ACR }}/callmebot-adapter:buildcache,mode=max
