name: Build Images

on:

  workflow_dispatch:
    inputs:
      branch:
        description: "Select the branch to build (feature/ci-cd or main)"
        required: true
        default: "feature/ci-cd"
      environment:
        description: "Select environment (dev or prod)"
        required: true
        type: choice
        options:
          - dev
          - prod

  
  push:
    branches:
      - feature/ci-cd
      - main

env:
  REGISTRY_FQDN_SUFFIX: azurecr.io

concurrency:
  group: build-${{ github.event.inputs.environment || 'auto' }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      ENV: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout selected branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set ENV manually from input
        id: envsel
        run: |
          echo "ENV=${{ github.event.inputs.environment }}" >> "$GITHUB_OUTPUT"

      - name: 🔐 Azure Login (SPN JSON)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Resolve ACR FQDN and login
        id: acr
        shell: bash
        run: |
          ACR_NAME="${{ secrets.ACR_NAME }}"
          test -n "$ACR_NAME" || { echo "Missing secret ACR_NAME"; exit 1; }
          echo "ACR=${ACR_NAME}.${REGISTRY_FQDN_SUFFIX}" >> "$GITHUB_OUTPUT"
          az acr login --name "$ACR_NAME"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ steps.acr.outputs.ACR }}/backend:latest-${{ github.event.inputs.environment }}
            ${{ steps.acr.outputs.ACR }}/backend:${{ github.sha }}-${{ github.event.inputs.environment }}
          cache-from: type=registry,ref=${{ steps.acr.outputs.ACR }}/backend:buildcache
          cache-to: type=registry,ref=${{ steps.acr.outputs.ACR }}/backend:buildcache,mode=max

      - name: Build & push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ steps.acr.outputs.ACR }}/frontend:latest-${{ github.event.inputs.environment }}
            ${{ steps.acr.outputs.ACR }}/frontend:${{ github.sha }}-${{ github.event.inputs.environment }}
          cache-from: type=registry,ref=${{ steps.acr.outputs.ACR }}/frontend:buildcache
          cache-to: type=registry,ref=${{ steps.acr.outputs.ACR }}/frontend:buildcache,mode=max

      - name: Build & push callmebot-adapter
        uses: docker/build-push-action@v5
        with:
          context: ./aks-yaml/callmebot
          push: true
          tags: |
            ${{ steps.acr.outputs.ACR }}/callmebot-adapter:latest-${{ github.event.inputs.environment }}
            ${{ steps.acr.outputs.ACR }}/callmebot-adapter:${{ github.sha }}-${{ github.event.inputs.environment }}
          cache-from: type=registry,ref=${{ steps.acr.outputs.ACR }}/callmebot-adapter:buildcache
          cache-to: type=registry,ref=${{ steps.acr.outputs.ACR }}/callmebot-adapter:buildcache,mode=max
