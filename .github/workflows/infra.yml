name: Infra (Terraform)

on:
  workflow_call:
    inputs:
      environment:
        required: false
        type: string
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment (dev or prod)"
        required: false
        default: "dev"

concurrency:
  group: infra-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      TF_IN_AUTOMATION: "true"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Decide ENV from input or branch
        id: envsel
        shell: bash
        run: |
          if [ -n "${{ inputs.environment }}" ]; then
            ENV=${{ inputs.environment }}
          else
            BRANCH="${GITHUB_REF_NAME:-${GITHUB_REF##*/}}"
            if [ "$BRANCH" = "main" ]; then ENV=prod; else ENV=dev; fi
          fi
          echo "ENV=$ENV" >> "$GITHUB_OUTPUT"

      - name: 🔐 Azure Login (SPN JSON)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Fetch ACR id
        id: acr
        shell: bash
        run: |
          ACR_NAME="${{ secrets.ACR_NAME }}"
          ACR_ID=$(az acr show -n "$ACR_NAME" --query id -o tsv)
          test -n "$ACR_ID" || { echo "Cannot resolve ACR id"; exit 1; }
          echo "ACR_ID=$ACR_ID" >> "$GITHUB_OUTPUT"

      - name: Export ARM_* for Terraform (SPN secret)
        shell: bash
        run: |
          CREDS='${{ secrets.AZURE_CREDENTIALS }}'
          echo ARM_CLIENT_ID=$(echo "$CREDS" | jq -r '.clientId') >> $GITHUB_ENV
          echo ARM_CLIENT_SECRET=$(echo "$CREDS" | jq -r '.clientSecret') >> $GITHUB_ENV
          echo ARM_TENANT_ID=$(echo "$CREDS" | jq -r '.tenantId') >> $GITHUB_ENV
          echo ARM_SUBSCRIPTION_ID=$(echo "$CREDS" | jq -r '.subscriptionId') >> $GITHUB_ENV
          echo ARM_USE_OIDC=false >> $GITHUB_ENV

      - name: Write env.auto.tfvars
        working-directory: ./terraform
        shell: bash
        run: |
          if [ "${{ steps.envsel.outputs.ENV }}" = "prod" ]; then
            printf "%s\n" '${{ secrets.PROD }}' > env.auto.tfvars
          else
            printf "%s\n" '${{ secrets.DEV }}' > env.auto.tfvars
          fi
          echo "acr_id = \"${{ steps.acr.outputs.ACR_ID }}\"" >> env.auto.tfvars

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init -upgrade

      - name: Terraform Plan
        id: plan
        working-directory: ./terraform
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan
